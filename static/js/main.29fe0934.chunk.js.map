{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","feedbackFormWrapper","title","itemLists","positive","negative","FeedbackOptions","options","onLeaveFeedback","buttonWrapper","map","option","key","type","name","onClick","Section","children","sectionWrapper","Notification","message","App","state","e","stateKey","target","setState","prevState","this","Math","floor","countTotalFeedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,UAAY,8BAA8B,SAAW,6BAA6B,QAAU,4BAA4B,SAAW,+B,gBCAvLD,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,MAAQ,yB,sBCA3ED,EAAOC,QAAU,CAAC,cAAgB,yC,gBCAlCD,EAAOC,QAAU,CAAC,QAAU,gC,2KCkCbC,EA/BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,yBAAKC,UAAWC,IAAOC,qBACrB,wBAAIF,UAAWC,IAAOE,OAAtB,cACA,wBAAIH,UAAWC,IAAOG,WACpB,qCACQ,0BAAMJ,UAAWC,IAAOI,UAAWV,IAE3C,wCACW,0BAAMK,UAAWC,IAAOL,SAAUA,IAE7C,oCACO,0BAAMI,UAAWC,IAAOK,UAAWT,IAE1C,gDACmB,8BAAOC,IAE1B,mDACsB,8BAAOC,EAAP,S,gBCGbQ,EApBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,yBAAKT,UAAWC,IAAOS,eACpBF,EAAQG,KAAI,SAAAC,GAAM,OACjB,4BACEC,IAAKD,EACLE,KAAK,SACLC,KAAMH,EACNI,QAASP,GAERG,Q,gBCGMK,EAZC,SAAC,GAAD,IAAGd,EAAH,EAAGA,MAAOe,EAAV,EAAUA,SAAV,OACd,6BAASlB,UAAWC,IAAOkB,gBACzB,wBAAInB,UAAWC,IAAOE,OAAQA,GAC7Be,I,iBCKUE,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,uBAAGrB,UAAWC,IAAOoB,SAAUA,ICC3Bb,EAAU,CAAC,OAAQ,UAAW,OAEfc,E,2MACnBC,MAAQ,CACN5B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPY,gBAAkB,SAAAe,GAChB,IAAMC,EAAWD,EAAEE,OAAOX,KAC1B,EAAKY,UAAS,SAAAC,GAAS,sBACpBH,EAAWG,EAAUH,GAAY,O,oFAIhB,IAAD,EACYI,KAAKN,MACpC,OAFmB,EACX5B,KADW,EACLC,QADK,EACIC,M,wDAIU,IAAD,EACDgC,KAAKN,MAA5B5B,EADwB,EACxBA,KAAMC,EADkB,EAClBA,QAASC,EADS,EACTA,IACvB,OAAIF,EAAOC,EAAUC,IAAQ,EACpB,EAEFiC,KAAKC,MAAc,IAAPpC,GAAeA,EAAOC,EAAUC,M,+BAG3C,IAAD,EACwBgC,KAAKN,MAA5B5B,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEjBC,EAAQ+B,KAAKG,qBACbjC,EAAqB8B,KAAKI,kCAEhC,OACE,6BACE,kBAAC,EAAD,CAAS9B,MAAM,yBACb,kBAAC,EAAD,CACEK,QAASA,EACTC,gBAAiBoB,KAAKpB,kBAEvBX,EAAQ,EACP,kBAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,kBAAC,EAAD,CAAcsB,QAAQ,4B,GAjDDa,aCJjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.29fe0934.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__1qzp1\",\"itemLists\":\"Statistics_itemLists__lVjZx\",\"positive\":\"Statistics_positive__27Oqk\",\"neutral\":\"Statistics_neutral__3gGNw\",\"negative\":\"Statistics_negative__11biC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionWrapper\":\"Section_sectionWrapper__1WVfH\",\"title\":\"Section_title__1ydme\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonWrapper\":\"FeedbackOptions_buttonWrapper__1Y-Ys\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__RIsap\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <div className={styles.feedbackFormWrapper}>\r\n    <h4 className={styles.title}>Statistics</h4>\r\n    <ul className={styles.itemLists}>\r\n      <li>\r\n        Good: <span className={styles.positive}>{good}</span>\r\n      </li>\r\n      <li>\r\n        Neutral: <span className={styles.neutral}>{neutral}</span>\r\n      </li>\r\n      <li>\r\n        Bad: <span className={styles.negative}>{bad}</span>\r\n      </li>\r\n      <li>\r\n        Total feedbacks: <span>{total}</span>\r\n      </li>\r\n      <li>\r\n        Positive feedbacks: <span>{positivePercentage}%</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div className={styles.buttonWrapper}>\r\n    {options.map(option => (\r\n      <button\r\n        key={option}\r\n        type=\"button\"\r\n        name={option}\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.sectionWrapper}>\r\n    <h2 className={styles.title}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={styles.message}>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport Statistics from \"./Statistics/Statistics\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Section from \"./Section/Section\";\nimport Notification from \"./Notification/Notification\";\n\nconst options = [\"good\", \"neutral\", \"bad\"];\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n\n  onLeaveFeedback = e => {\n    const stateKey = e.target.name;\n    this.setState(prevState => ({\n      [stateKey]: prevState[stateKey] + 1\n    }));\n  };\n\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const { good, neutral, bad } = this.state;\n    if (good + neutral + bad === 0) {\n      return 0;\n    }\n    return Math.floor((good * 100) / (good + neutral + bad));\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}